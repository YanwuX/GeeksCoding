package geeksForGeeks;

public class PrintKthElementInSpiralFormOfMatrix {
	/**
	 * runtime O(n) space O(1)
	 * @param arr
	 * @param k
	 */

	public static void printKthElementInSpiralMatrix(int[][] arr, int k) {
		int x = 0;
		int y = 0;

		while (true) {
			if (k < arr[0].length) {
				System.out.println(arr[y][k - 1]);
				break;
			} else {
				k = k - arr[0].length;
				if (k < arr.length) {
					System.out.println(arr[k][arr[0].length - x - 1]);
					break;
				} else {
					k = k - arr.length + 1;
					if (k < arr[0].length) {
						System.out.println(arr[arr.length - y - 1][arr[0].length - k - x - 1]);
						break;
					} else {
						k = k - arr[0].length + 1;
						y += 1;
						if (k < arr.length - y) {
							System.out.println(arr[arr.length - k - 1][x]);
							break;
						}
						x += 1;
					}
				}
			}
		}
	}
	
//	public static int findKthElementRecursion(int[][] arr, int n, int m, int k) {
//		if(n < 0 || m < 0) return -1;
//		
//		if(k < arr[0].length) return arr[0][k - 1];
//		
//		if()
//		
//		return findKthElementRecursion(arr, arr.length - 2, arr[0].length - 2, k - (2 * arr.length + 2 * arr[0].length -4));
//	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int matrix[][] = { { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 10, 11, 12 }, { 13, 14, 15, 16 } };
		int mat[][] = { { 1, 2, 3, 4, 5, 6 }, { 7, 8, 9, 10, 11, 12 }, { 13, 14, 15, 16, 17, 18 } };
		printKthElementInSpiralMatrix(matrix, 13);
	}

}
